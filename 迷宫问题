#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <algorithm>
using namespace std;

int N, M;
vector<vector<int>> v1;
vector<vector<int>> v2;
vector<vector<int>> v3;


void Track(int i, int j)
{
	v1[i][j] = 1;
	v2.push_back({ i, j });

	if (i == N - 1 && j == M - 1)
	{
		if (v3.empty() || v2.size() < v3.size())
			v3 = v2;
	}

	if (i - 1 >= 0 && v1[i - 1][j] == 0)//向上
		Track(i - 1, j);
	else if (i + 1 < N && v1[i + 1][j] == 0)//向下
		Track(i + 1, j);
	else if (j - 1 >= 0 && v1[i][j - 1] == 0)//向左
		Track(i, j - 1);
	else if (j + 1 < M && v1[i][j + 1] == 0)//向右
		Track(i, j + 1);

	v1[i][j] == 0;
	v2.pop_back();
}

int main()
{
	while (cin >> N >> M)
	{
		v1 = vector<vector<int>>(N, vector<int>(M,0));
		v2.clear();
		v3.clear(); 
		for (int i = 0; i < N; i++)
		{
			for (int j = 0; j < M; j++)
				cin >> v1[i][j];
		}

		Track(0, 0);
		for (auto i : v3)
			cout << '(' << i[0] << ',' << i[1] << ')' << endl;
	}
	return 0;
}
