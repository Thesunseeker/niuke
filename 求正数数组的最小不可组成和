//dp问题,类似0,1背包
class Solution {
public:
	/**
	*	正数数组中的最小不可组成和
	*	输入：正数数组arr
	*	返回：正数数组中的最小不可组成和
	*/
	int getFirstUnFormedNum(vector<int> arr, int len) {
		int sum = 0;
		int min = arr[0];
		for (int i = 0; i < len; i++)
		{
			sum += arr[i];
			if (arr[i] < min)
				min = arr[i];
		}
		vector<int> v1(sum + 1, 0);
		for (int i = 0; i < len; ++i)
		{
			for (int j = sum; j >= arr[i]; j--)
			{
				if (v1[j - arr[i]] + arr[i] > v1[j])
					v1[j] = v1[j - arr[i]] + arr[i];
				else
					v1[j] = v1[j];
			}
		}
		for (int i = min; i <= sum; i++)
		{
			if (i != v1[i])
				return i;
		}
		return sum + 1;
	}
};

int main()
{
	vector<int> arr = { 3, 2, 4 };
	Solution s;
	cout << s.getFirstUnFormedNum(arr, 3) << endl;
	return 0;
}
